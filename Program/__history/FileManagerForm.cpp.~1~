#include <vcl.h>
#pragma hdrstop

#include "FileManagerForm.h"
#include <windows.h>
#include <Shellapi.h>
#include <algorithm>

#pragma package(smart_init)
#pragma link "cdiroutl"
#pragma resource "*.dfm"

using namespace std;

TForm2 *Form2;
int leftPanelSelectedRow, rightPanelSelectedRow;
int selectedPanel = 1;


__fastcall TForm2::TForm2(TComponent* Owner)
	: TForm(Owner)
{
}



void __fastcall TForm2::DirectoryListBox1Change(TObject *Sender)
{
    Label1->Caption = DirectoryListBox1->Directory;
	FileListBox1->Directory = DirectoryListBox1->Directory;
	StringGrid1->RowCount = DirectoryListBox1->Count - DirectoryListBox1->ItemIndex + 1 + FileListBox1->Count;

    WIN32_FILE_ATTRIBUTE_DATA itemInformation;

    int numberOfFirstWriteItem = DirectoryListBox1->ItemIndex + 1;
    int numberOfLastWriteItem = DirectoryListBox1->Count - 1;
    String itemName;
    for (int i = numberOfFirstWriteItem; i <= numberOfLastWriteItem; i++)
    {
        StringGrid1->Cells[1][i - numberOfFirstWriteItem + 2] = DirectoryListBox1->Items->Strings[i];
        StringGrid1->Cells[2][i - numberOfFirstWriteItem + 2] = "";
        StringGrid1->Cells[3][i - numberOfFirstWriteItem + 2] = "<Папка>";
        itemName = DirectoryListBox1->GetItemPath(i);
        if(GetFileAttributesEx(itemName.c_str(), GetFileExInfoStandard, (LPVOID)&itemInformation)) 
        {
            SYSTEMTIME systemTime;

            if(FileTimeToSystemTime(&itemInformation.ftLastWriteTime, &systemTime))
            {
                TDateTime itemCreateTime = SystemTimeToDateTime(systemTime);
                itemCreateTime += 3.0 / 24;
                StringGrid1->Cells[4][i - numberOfFirstWriteItem + 2] = itemCreateTime.DateTimeString();
            }
        }
    }
    
    numberOfFirstWriteItem = numberOfLastWriteItem - numberOfFirstWriteItem + 3;
    numberOfLastWriteItem = FileListBox1->Count;
    int pointPosition;
    
    for (int i = 0; i < numberOfLastWriteItem; i++)
    {
        itemName = ExtractFileName(FileListBox1->Items->Strings[i]);
        pointPosition = LastDelimiter('.', itemName);
        itemName.Delete(pointPosition, itemName.Length() - pointPosition + 1);
        StringGrid1->Cells[1][i + numberOfFirstWriteItem] = itemName;
        StringGrid1->Cells[2][i + numberOfFirstWriteItem] = ExtractFileExt(FileListBox1->Items->Strings[i]);
        itemName = DirectoryListBox1->Directory + "\\" + FileListBox1->Items->Strings[i];
        
        if(GetFileAttributesEx(itemName.c_str(), GetFileExInfoStandard, (LPVOID)&itemInformation))
        {
            SYSTEMTIME systemTime;

            if(FileTimeToSystemTime(&itemInformation.ftLastWriteTime, &systemTime))
            {
                TDateTime itemCreateTime = SystemTimeToDateTime(systemTime);
                itemCreateTime += 3.0 / 24;
                StringGrid1->Cells[4][i + numberOfFirstWriteItem] = itemCreateTime.DateTimeString();
                StringGrid1->Cells[3][i + numberOfFirstWriteItem] = itemInformation.nFileSizeHigh * (MAXDWORD + 1) + itemInformation.nFileSizeLow;
            }
        }
    }
}



void __fastcall TForm2::Create(TDirectoryListBox *DirectoryListBoxFrom)
{
	String directoryPath = DirectoryListBoxFrom->GetItemPath(DirectoryListBoxFrom->ItemIndex);
    String folderName;
    folderName = InputBox("Создание папки", "Введите имя папки", "");
    String folderDirectoryPath = directoryPath + "\\" + folderName;

    if (!CreateDirectory(folderDirectoryPath.c_str() , NULL))
        MessageDlg("Каталог с данным именем уже существует.", mtError, TMsgDlgButtons() << mbOK, 0);

    UpdateComponents();
}


void __fastcall TForm2::Button1Click(TObject *Sender)
{
	if (selectedPanel == 1) 
    	Create(DirectoryListBox1);
    else 
    	Create(DirectoryListBox2);    
}



void __fastcall TForm2::FormCreate(TObject *Sender)
{
    SHFILEINFO info;
    String temp = "";
  	DWORD ImageHandle = SHGetFileInfo(temp.c_str(), 0, &info, sizeof(info), SHGFI_ICON | SHGFI_SHELLICONSIZE | SHGFI_SYSICONINDEX);
    if (ImageHandle != 0)
  	{
    	ImageList1->Handle = ImageHandle;
    	ImageList1->ShareImages = true;
  	}

    Label1->Caption = DirectoryListBox1->Directory;
    Label2->Caption = DirectoryListBox2->Directory;

    StringGrid1->Cells[1][0] = "Имя";
    StringGrid2->Cells[1][0] = "Имя";
    StringGrid1->Cells[2][0] = "Тип";
    StringGrid2->Cells[2][0] = "Тип";
    StringGrid1->Cells[3][0] = "Размер";
    StringGrid2->Cells[3][0] = "Размер";
    StringGrid1->Cells[4][0] = "Дата";
    StringGrid2->Cells[4][0] = "Дата";
    StringGrid1->Cells[1][1] = "[..]";
    StringGrid2->Cells[1][1] = "[..]";

    StringGrid1->ColCount = 5;
    StringGrid2->ColCount = 5;
}



void __fastcall TForm2::UpdateComponents()
{
	FileListBox1->Update();
    FileListBox2->Update();
    DirectoryListBox1->Update();
    DirectoryListBox2->Update();
    StringGrid1->Repaint();
    StringGrid2->Repaint();	
}



void __fastcall TForm2::Delete(TDirectoryListBox *DirectoryListBoxFrom, TDirectoryListBox *DirectoryListBoxTo, TStringGrid *PanelFrom, TFileListBox *FileListBoxFrom, TLabel *LabelTo)
{
    int topSelectedRow = max(PanelFrom->Selection.Top, 2);
    int bottomSelectedRow = PanelFrom->Selection.Bottom;
    bool updateFlag = false;
    String pathFrom, removedElements = "";

    for (int i = topSelectedRow; i <= bottomSelectedRow; ++i)
    {
    	if (PanelFrom->Cells[3][i] != "<Папка>")
        {
        	int j = i - 1 - DirectoryListBoxFrom->Count + DirectoryListBoxFrom->ItemIndex;
        	if (DirectoryListBoxFrom->ItemIndex == 0)
        		pathFrom = DirectoryListBoxFrom->GetItemPath(DirectoryListBoxFrom->ItemIndex) + ExtractFileName(FileListBoxFrom->Items->Strings[j]);
            else 
            	pathFrom = DirectoryListBoxFrom->GetItemPath(DirectoryListBoxFrom->ItemIndex) + "\\" + ExtractFileName(FileListBoxFrom->Items->Strings[j]);
        }
        else if (PanelFrom->Cells[3][i] == "<Папка>")
        {
        	if (DirectoryListBoxFrom->ItemIndex == 0)
        		pathFrom = DirectoryListBoxFrom->Directory + PanelFrom->Cells[1][i];
    		else 
            	pathFrom = DirectoryListBoxFrom->Directory + "\\" + PanelFrom->Cells[1][i];

        	String pathTo = LabelTo->Caption;
            bool entryFlag = true;

        	if (pathFrom.Length() == pathTo.Length()) 
            {
            	for (int j = 1; j <= pathFrom.Length(); ++j)
            		if (pathFrom[j] != pathTo[j]) entryFlag = false;
        	}
            else if (pathFrom.Length() < pathTo.Length()) 
            {
            	pathFrom += '\\';
            	for (int j = 1; j <= pathFrom.Length(); ++j)
            		if (pathFrom[j] != pathTo[j]) entryFlag = false;
                pathFrom.Delete(pathFrom.Length(), 1);    
        	}
        	else 
            	entryFlag = false;

            if (entryFlag) 
            	updateFlag = true;  
    	}
        removedElements += pathFrom + '\0';
    }

    removedElements += '\0';
    
    SHFILEOPSTRUCT operation;
    ZeroMemory(&operation, sizeof(operation));
    operation.hwnd  = Form2->Handle;
    operation.wFunc = FO_DELETE;
    operation.pFrom = removedElements.c_str();
    operation.fFlags = FOF_ALLOWUNDO;
    SHFileOperation(&operation);

    if (updateFlag) 
    	DirectoryListBoxTo->Directory = DirectoryListBoxFrom->Directory;

    UpdateComponents();
}



void __fastcall TForm2::Button2Click(TObject *Sender)
{
    if (selectedPanel == 1) 
    	Delete(DirectoryListBox1, DirectoryListBox2, StringGrid1, FileListBox1, Label2);
    else 
    	Delete(DirectoryListBox2, DirectoryListBox1, StringGrid2, FileListBox2, Label1);
}



void __fastcall TForm2::Rename(TDirectoryListBox *DirectoryListBoxFrom, TDirectoryListBox *DirectoryListBoxTo, TStringGrid *PanelFrom, TFileListBox *FileListBoxFrom, TLabel *LabelTo)
{
	String oldItemPath, newItemPath, secondPanelPath, temp, newItemName;
    bool flag;
    int pathLength, selectedItemRow = PanelFrom->Selection.Top;
    if (PanelFrom->Cells[3][selectedItemRow] != "<Папка>")
	{
		int i = selectedItemRow - 1 - DirectoryListBoxFrom->Count + DirectoryListBoxFrom->ItemIndex;
        if (DirectoryListBoxFrom->ItemIndex == 0)
        	oldItemPath = DirectoryListBoxFrom->GetItemPath(DirectoryListBoxFrom->ItemIndex) + "\\" + ExtractFileName(FileListBoxFrom->Items->Strings[i]);
        else 
        	oldItemPath = DirectoryListBoxFrom->GetItemPath(DirectoryListBoxFrom->ItemIndex) + "\\" + ExtractFileName(FileListBoxFrom->Items->Strings[i]);

		newItemName = InputBox("Переименование файла", "Введите новое имя", "");

        if (DirectoryListBoxFrom->ItemIndex == 0)
        	newItemPath = DirectoryListBoxFrom->GetItemPath(DirectoryListBoxFrom->ItemIndex) + "\\" + newItemName + ExtractFileExt(FileListBoxFrom->Items->Strings[i]);
        else 
        	newItemPath = DirectoryListBoxFrom->GetItemPath(DirectoryListBoxFrom->ItemIndex) + "\\" + newItemName + ExtractFileExt(FileListBoxFrom->Items->Strings[i]);

        oldItemPath += '\0';
        newItemPath += '\0';
	}
	else if (PanelFrom->Cells[3][selectedItemRow] == "<Папка>")
    {
    	oldItemPath = DirectoryListBoxFrom->GetItemPath(DirectoryListBoxFrom->ItemIndex + selectedItemRow - 1);

    	newItemName = InputBox("Переименование папки", "Введите новое имя", "");

    	if (DirectoryListBoxFrom->ItemIndex == 0)
        	newItemPath = DirectoryListBoxFrom->GetItemPath(DirectoryListBoxFrom->ItemIndex) + newItemName;
        else 
        	newItemPath = DirectoryListBoxFrom->GetItemPath(DirectoryListBoxFrom->ItemIndex) + "\\" + newItemName;

    	secondPanelPath = LabelTo->Caption;
    	pathLength = oldItemPath.Length();

    	flag = true;
    	if (oldItemPath.Length() <= secondPanelPath.Length()) 
        {
    		for (int i = 1; i <= oldItemPath.Length(); ++i)
            	if (oldItemPath[i] != secondPanelPath[i]) flag = false;
    	}
    	else 
        	flag = false;

    	oldItemPath += '\0';
    	temp = newItemPath;
    	newItemPath += '\0';
    }

    SHFILEOPSTRUCT operation;
    ZeroMemory(&operation, sizeof(operation));
    operation.hwnd  = Form2->Handle;
    operation.wFunc = FO_RENAME;
    operation.pFrom = oldItemPath.c_str();
    operation.pTo = newItemPath.c_str();
    operation.fFlags = 0;
    SHFileOperation(&operation);
    
    if (PanelFrom->Cells[3][selectedItemRow] == "<Папка>")
    {
        if (flag) 
        {
        	secondPanelPath.Delete(1, pathLength);
        	secondPanelPath = temp + "\\" + secondPanelPath;
    	}
    	DirectoryListBoxTo->Directory = secondPanelPath;
    }

    UpdateComponents();	
}


void __fastcall TForm2::Button3Click(TObject *Sender)
{
	if (selectedPanel == 1 && StringGrid1->Selection.Top > 1) 
    	Rename(DirectoryListBox1, DirectoryListBox2, StringGrid1, FileListBox1, Label2);
    else if (StringGrid1->Selection.Top > 1)
    	Rename(DirectoryListBox2, DirectoryListBox1, StringGrid2, FileListBox2, Label1);
}



void __fastcall TForm2::DriveComboBox1Change(TObject *Sender)
{
    DirectoryListBox1->Drive = DriveComboBox1->Drive;
    DirectoryListBox1->Directory = DirectoryListBox1->GetItemPath(0);
    StringGrid1->Repaint();
}



void __fastcall TForm2::DriveComboBox2Change(TObject *Sender)
{
    DirectoryListBox2->Drive = DriveComboBox2->Drive;
    DirectoryListBox2->Directory = DirectoryListBox2->GetItemPath(0);
    StringGrid2->Repaint();
}



void __fastcall TForm2::DirectoryListBox2Change(TObject *Sender)
{
    Label2->Caption = DirectoryListBox2->Directory;
	FileListBox2->Directory = DirectoryListBox2->Directory;
	StringGrid2->RowCount = DirectoryListBox2->Count - DirectoryListBox2->ItemIndex + 1 + FileListBox2->Count;

    WIN32_FILE_ATTRIBUTE_DATA itemInformation;

    int numberOfFirstWriteItem = DirectoryListBox2->ItemIndex + 1;
    int numberOfLastWriteItem = DirectoryListBox2->Count - 1;
    String itemName;
    for (int i = numberOfFirstWriteItem; i <= numberOfLastWriteItem; i++)
    {
        StringGrid2->Cells[1][i - numberOfFirstWriteItem + 2] = DirectoryListBox2->Items->Strings[i];
        StringGrid2->Cells[2][i - numberOfFirstWriteItem + 2] = "";
        StringGrid2->Cells[3][i - numberOfFirstWriteItem + 2] = "<Папка>";
        itemName = DirectoryListBox2->GetItemPath(i);
        if(GetFileAttributesEx(itemName.c_str(), GetFileExInfoStandard, (LPVOID)&itemInformation)) 
        {
            SYSTEMTIME systemTime;

            if(FileTimeToSystemTime(&itemInformation.ftLastWriteTime, &systemTime))
            {
                TDateTime itemCreateTime = SystemTimeToDateTime(systemTime);
                itemCreateTime += 3.0 / 24;
                StringGrid2->Cells[4][i - numberOfFirstWriteItem + 2] = itemCreateTime.DateTimeString();
            }
        }
    }
    
    numberOfFirstWriteItem = numberOfLastWriteItem - numberOfFirstWriteItem + 3;
    numberOfLastWriteItem = FileListBox2->Count;
    int pointPosition;
    
    for (int i = 0; i < numberOfLastWriteItem; i++)
    {
        itemName = ExtractFileName(FileListBox2->Items->Strings[i]);
        pointPosition = LastDelimiter('.', itemName);
        itemName.Delete(pointPosition, itemName.Length() - pointPosition + 1);
        StringGrid2->Cells[1][i + numberOfFirstWriteItem] = itemName;
        StringGrid2->Cells[2][i + numberOfFirstWriteItem] = ExtractFileExt(FileListBox2->Items->Strings[i]);
        itemName = DirectoryListBox2->Directory + "\\" + FileListBox2->Items->Strings[i];
        
        if(GetFileAttributesEx(itemName.c_str(), GetFileExInfoStandard, (LPVOID)&itemInformation))
        {
            SYSTEMTIME systemTime;

            if(FileTimeToSystemTime(&itemInformation.ftLastWriteTime, &systemTime))
            {
                TDateTime itemCreateTime = SystemTimeToDateTime(systemTime);
                itemCreateTime += 3.0 / 24;
                StringGrid2->Cells[4][i + numberOfFirstWriteItem] = itemCreateTime.DateTimeString();
                StringGrid2->Cells[3][i + numberOfFirstWriteItem] = itemInformation.nFileSizeHigh * (MAXDWORD + 1) + itemInformation.nFileSizeLow;
            }
        }
    }
}



void __fastcall TForm2::FilterComboBox1Change(TObject *Sender)
{
    FileListBox1->Mask = FilterComboBox1->Mask;
    DirectoryListBox1Change(0);
}



void __fastcall TForm2::FilterComboBox2Change(TObject *Sender)
{
    FileListBox2->Mask = FilterComboBox2->Mask;
    DirectoryListBox2Change(0);
}



void __fastcall TForm2::StringGrid1SelectCell(TObject *Sender, int ACol, int ARow,
          bool &CanSelect)
{
    leftPanelSelectedRow = ARow;
}



void __fastcall TForm2::StringGrid1DblClick(TObject *Sender)
{
    selectedPanel = 1;
    if (leftPanelSelectedRow > 0 && leftPanelSelectedRow < DirectoryListBox1->Count - DirectoryListBox1->ItemIndex + 1)
    {
    	if (leftPanelSelectedRow == 1 && DirectoryListBox1->ItemIndex > 0)
        	DirectoryListBox1->Directory = DirectoryListBox1->GetItemPath(DirectoryListBox1->ItemIndex - 1);
    	else 
        	DirectoryListBox1->Directory = DirectoryListBox1->GetItemPath(DirectoryListBox1->ItemIndex + leftPanelSelectedRow - 1);
    }
    else if (leftPanelSelectedRow > 0)
    {
        String directoryPath = FileListBox1->Directory + "\\" + FileListBox1->Items->Strings[leftPanelSelectedRow - (DirectoryListBox1->Count - DirectoryListBox1->ItemIndex + 1)];
    	ShellExecute(Form2->Handle, L"open", directoryPath.c_str(), NULL, NULL, SW_SHOWDEFAULT);
    }
    StringGrid1->Repaint();
}



void __fastcall TForm2::StringGrid2SelectCell(TObject *Sender, int ACol, int ARow,
          bool &CanSelect)
{
    rightPanelSelectedRow = ARow;
}



void __fastcall TForm2::StringGrid2DblClick(TObject *Sender)
{
    selectedPanel = 2;
    if (rightPanelSelectedRow > 0 && rightPanelSelectedRow < DirectoryListBox2->Count - DirectoryListBox2->ItemIndex + 1)
    {
    	if (rightPanelSelectedRow == 1 && DirectoryListBox2->ItemIndex > 0)
        	DirectoryListBox2->Directory = DirectoryListBox2->GetItemPath(DirectoryListBox2->ItemIndex - 1);
    	else 
        	DirectoryListBox2->Directory = DirectoryListBox2->GetItemPath(DirectoryListBox2->ItemIndex + rightPanelSelectedRow - 1);
    }
    else if (rightPanelSelectedRow > 0)
    {
        String directoryPath = FileListBox2->Directory + "\\" + FileListBox2->Items->Strings[rightPanelSelectedRow - (DirectoryListBox2->Count - DirectoryListBox2->ItemIndex + 1)];
    	ShellExecute(Form2->Handle, L"open", directoryPath.c_str(), NULL, NULL, SW_SHOWDEFAULT);
    }
    StringGrid2->Repaint();
}



void __fastcall TForm2::FormKeyDown(TObject *Sender, WORD &Key, TShiftState Shift)
{
	if (Key == 116) 
    	Button6Click(0);
	if (Key == 117) 
    	Button5Click(0);
    if (Key == 118) 
    	Button1Click(0);
	if (Key == 119) 
    	Button2Click(0);
    if (Key == 120) 
    	Button3Click(0);
}



void __fastcall TForm2::Button4Click(TObject *Sender)
{
    Form2->Close();
}



void __fastcall TForm2::StringGrid1Click(TObject *Sender)
{
    selectedPanel = 1;
}



void __fastcall TForm2::StringGrid2Click(TObject *Sender)
{
    selectedPanel = 2;
}



void __fastcall TForm2::StringGrid1DrawCell(TObject *Sender, int ACol, int ARow, TRect &Rect,
          TGridDrawState State)
{
	Graphics::TBitmap * Bitmap = new Graphics::TBitmap;
    int itemIndex = DirectoryListBox1->ItemIndex;
    String directoryPath;
    SHFILEINFO info;
    DWORD result;
    if (ACol == 0 && ARow > 1)
    {
        if (ARow < DirectoryListBox1->Count - DirectoryListBox1->ItemIndex + 1)
            directoryPath = DirectoryListBox1->GetItemPath(itemIndex + ARow - 1);
        else 
        {
            if (DirectoryListBox1->ItemIndex > 0)
                directoryPath = FileListBox1->Directory + "\\" + FileListBox1->Items->Strings[ARow - (DirectoryListBox1->Count - DirectoryListBox1->ItemIndex + 1)];
            else 
            	directoryPath = FileListBox1->Directory + FileListBox1->Items->Strings[ARow - (DirectoryListBox1->Count - DirectoryListBox1->ItemIndex + 1)];
        }

        SHGetFileInfo(directoryPath.c_str(), 0, &info, sizeof(info), SHGFI_ICON | SHGFI_SHELLICONSIZE | SHGFI_SYSICONINDEX);

        ImageList1->GetBitmap(info.iIcon, Bitmap);
        StringGrid1->Canvas->StretchDraw(Rect, Bitmap);
    }
}



void __fastcall TForm2::StringGrid2DrawCell(TObject *Sender, int ACol, int ARow, TRect &Rect,
          TGridDrawState State)
{
    Graphics::TBitmap * Bitmap = new Graphics::TBitmap;
    int itemIndex = DirectoryListBox2->ItemIndex;
    String directoryPath;
    SHFILEINFO info;
    DWORD result;
    if (ACol == 0 && ARow > 1)
    {
        if (ARow < DirectoryListBox2->Count - DirectoryListBox2->ItemIndex + 1)
            directoryPath = DirectoryListBox2->GetItemPath(itemIndex + ARow - 1);
        else 
        {
            if (DirectoryListBox2->ItemIndex > 0)
                directoryPath = FileListBox2->Directory + "\\" + FileListBox2->Items->Strings[ARow - (DirectoryListBox2->Count - DirectoryListBox2->ItemIndex + 1)];
            else 
            	directoryPath = FileListBox2->Directory + FileListBox2->Items->Strings[ARow - (DirectoryListBox2->Count - DirectoryListBox2->ItemIndex + 1)];
        }

        SHGetFileInfo(directoryPath.c_str(), 0, &info, sizeof(info), SHGFI_ICON | SHGFI_SHELLICONSIZE | SHGFI_SYSICONINDEX);

        ImageList1->GetBitmap(info.iIcon, Bitmap);
        StringGrid2->Canvas->StretchDraw(Rect, Bitmap);
    }
}



void __fastcall TForm2::StringGrid1KeyDown(TObject *Sender, WORD &Key, TShiftState Shift)

{
	String directoryPath = Label1->Caption;

    if (Key == 13) 
    	StringGrid1DblClick(0);
    if (Key == 27 || Key == 8 && directoryPath.Length() > 3) 
    {
        leftPanelSelectedRow = 1;
        StringGrid1DblClick(0);
    }
}



void __fastcall TForm2::StringGrid2KeyDown(TObject *Sender, WORD &Key, TShiftState Shift)

{
	String directoryPath = Label2->Caption;

    if (Key == 13) 
    	StringGrid2DblClick(0);
    if (Key == 27 || Key == 8 && directoryPath.Length() > 3) 
    {
        rightPanelSelectedRow = 1;
        StringGrid2DblClick(0);
    }
}



void __fastcall TForm2::Move(TDirectoryListBox *DirectoryListBoxFrom, TStringGrid *PanelFrom, TFileListBox *FileListBoxFrom, TLabel *LabelTo)
{
    int topSelectedRow = max(PanelFrom->Selection.Top, 2);
    int bottomSelectedRow = PanelFrom->Selection.Bottom;
    String movedFrom = "";

    for (int i = topSelectedRow; i <= bottomSelectedRow; ++i)
    {
    	if (PanelFrom->Cells[3][i] != "<Папка>")
        {
        	int j = i - 1 - DirectoryListBoxFrom->Count + DirectoryListBoxFrom->ItemIndex;
        	if (DirectoryListBoxFrom->ItemIndex == 0)
        		movedFrom += DirectoryListBoxFrom->GetItemPath(DirectoryListBoxFrom->ItemIndex) + ExtractFileName(FileListBoxFrom->Items->Strings[j]);
            else 
            	movedFrom += DirectoryListBoxFrom->GetItemPath(DirectoryListBoxFrom->ItemIndex) + "\\" + ExtractFileName(FileListBoxFrom->Items->Strings[j]);
        }
        else if (PanelFrom->Cells[3][i] == "<Папка>")
        {
        	if (DirectoryListBoxFrom->ItemIndex == 0)
        		movedFrom += DirectoryListBoxFrom->Directory + PanelFrom->Cells[1][i];
    		else 
            	movedFrom += DirectoryListBoxFrom->Directory + "\\" + PanelFrom->Cells[1][i];
    	}
        movedFrom += '\0';
    }

    movedFrom += '\0';
    String movedTo = LabelTo->Caption + "\0\0";
    
    SHFILEOPSTRUCT operation;
    ZeroMemory(&operation, sizeof(operation));
    operation.hwnd  = Form2->Handle;
    operation.wFunc = FO_MOVE;
    operation.pFrom = movedFrom.c_str();
    operation.pTo = movedTo.c_str();
    operation.fFlags = 0;
    SHFileOperation(&operation);

    UpdateComponents();
}



void __fastcall TForm2::Button5Click(TObject *Sender)
{
	if (selectedPanel == 1) 
    	Move(DirectoryListBox1, StringGrid1, FileListBox1, Label2);
    else 
    	Move(DirectoryListBox2, StringGrid2, FileListBox2, Label1);
}



void __fastcall TForm2::Copy(TDirectoryListBox *DirectoryListBoxFrom, TStringGrid *PanelFrom, TFileListBox *FileListBoxFrom, TLabel *LabelTo)
{
    int topSelectedRow = max(PanelFrom->Selection.Top, 2);
    int bottomSelectedRow = PanelFrom->Selection.Bottom;
    String copiedFrom = "";

    for (int i = topSelectedRow; i <= bottomSelectedRow; ++i)
    {
    	if (PanelFrom->Cells[3][i] != "<Папка>")
        {
        	int j = i - 1 - DirectoryListBoxFrom->Count + DirectoryListBoxFrom->ItemIndex;
        	if (DirectoryListBoxFrom->ItemIndex == 0)
        		copiedFrom += DirectoryListBoxFrom->GetItemPath(DirectoryListBoxFrom->ItemIndex) + ExtractFileName(FileListBoxFrom->Items->Strings[j]);
            else 
            	copiedFrom += DirectoryListBoxFrom->GetItemPath(DirectoryListBoxFrom->ItemIndex) + "\\" + ExtractFileName(FileListBoxFrom->Items->Strings[j]);
        }
        else if (PanelFrom->Cells[3][i] == "<Папка>")
        {
        	if (DirectoryListBoxFrom->ItemIndex == 0)
        		copiedFrom += DirectoryListBoxFrom->Directory + PanelFrom->Cells[1][i];
    		else 
            	copiedFrom += DirectoryListBoxFrom->Directory + "\\" + PanelFrom->Cells[1][i];
    	}
        copiedFrom += '\0';
    }

    copiedFrom += '\0';
    String copiedTo = LabelTo->Caption + "\0\0";
    
    SHFILEOPSTRUCT operation;
    ZeroMemory(&operation, sizeof(operation));
    operation.hwnd  = Form2->Handle;
    operation.wFunc = FO_COPY;
    operation.pFrom = copiedFrom.c_str();
    operation.pTo = copiedTo.c_str();
    operation.fFlags = 0;
    SHFileOperation(&operation);

    UpdateComponents();
}



void __fastcall TForm2::Button6Click(TObject *Sender)
{
	if (selectedPanel == 1) 
    	Copy(DirectoryListBox1, StringGrid1, FileListBox1, Label2);
    else 
    	Copy(DirectoryListBox2, StringGrid2, FileListBox2, Label1);		
}
