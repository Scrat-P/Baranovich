//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit2.h"
#include <windows.h>
#include <Shellapi.h>
#include <algorithm>
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma link "cdiroutl"
#pragma resource "*.dfm"

using namespace std;

TForm2 *Form2;
int A1, B1, A2, B2;
int selectedPanel = 1;
//---------------------------------------------------------------------------
__fastcall TForm2::TForm2(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
void __fastcall TForm2::DirectoryListBox1Change(TObject *Sender)
{
    Label1->Caption = DirectoryListBox1->Directory;

	FileListBox1->Directory = DirectoryListBox1->Directory;

    StringGrid1->RowCount = DirectoryListBox1->Count - DirectoryListBox1->ItemIndex + 1 + FileListBox1->Count;

    WIN32_FILE_ATTRIBUTE_DATA fad;

    int a = DirectoryListBox1->ItemIndex + 1;
    int b = DirectoryListBox1->Count - 1;
    String s;
    for (int i = a; i <= b; i++)
    {
        StringGrid1->Cells[1][i - a + 2] = DirectoryListBox1->Items->Strings[i];
        StringGrid1->Cells[2][i - a + 2] = "";
        StringGrid1->Cells[3][i - a + 2] = "<Папка>";
        s = DirectoryListBox1->GetItemPath(i);
        if(GetFileAttributesEx(s.c_str(), GetFileExInfoStandard, (LPVOID)&fad)) {
            SYSTEMTIME st;

            if(FileTimeToSystemTime(&fad.ftLastWriteTime, &st))
            {
                TDateTime dt = SystemTimeToDateTime(st);
                dt += 3.0 / 24;
                StringGrid1->Cells[4][i - a + 2] = dt.DateTimeString();
            }
        }
    }
    a = b - a + 3;
    b = FileListBox1->Count;
    int pos;
    for (int i = 0; i < b; i++)
    {
        s = ExtractFileName(FileListBox1->Items->Strings[i]);
        pos = LastDelimiter('.', s);
        s.Delete(pos, s.Length() - pos + 1);
        StringGrid1->Cells[1][i + a] = s;
        StringGrid1->Cells[2][i + a] = ExtractFileExt(FileListBox1->Items->Strings[i]);
        s = DirectoryListBox1->Directory + "\\" + FileListBox1->Items->Strings[i];
        if(GetFileAttributesEx(s.c_str(), GetFileExInfoStandard, (LPVOID)&fad))
        {
            SYSTEMTIME st;

            if(FileTimeToSystemTime(&fad.ftLastWriteTime, &st))
            {
                TDateTime dt = SystemTimeToDateTime(st);
                dt += 3.0 / 24;
                StringGrid1->Cells[4][i + a] = dt.DateTimeString();
                StringGrid1->Cells[3][i + a] = fad.nFileSizeHigh * (MAXDWORD + 1) + fad.nFileSizeLow;
            }
        }
    }
}
//---------------------------------------------------------------------------
void __fastcall TForm2::Button1Click(TObject *Sender)
{
    String s1 = DirectoryListBox1->GetItemPath(DirectoryListBox1->ItemIndex);
    String path;
    path = InputBox("Создание папки", "Введите имя папки", "");
    String s = s1 + "\\" + path;

    if (!CreateDirectory(s.c_str() , NULL))
        MessageDlg("Каталог с данным именем уже существует.", mtError, TMsgDlgButtons() << mbOK, 0);

    DirectoryListBox1->Update();
    DirectoryListBox2->Update();
    StringGrid1->Repaint();
    StringGrid2->Repaint();
}
//---------------------------------------------------------------------------
void __fastcall TForm2::FormCreate(TObject *Sender)
{
    SHFILEINFO info;
    String s = "";
  	DWORD ImageHandle = SHGetFileInfo(s.c_str(), 0, &info, sizeof(info), SHGFI_ICON | SHGFI_SHELLICONSIZE | SHGFI_SYSICONINDEX);
    if (ImageHandle != 0)
  	{
    	ImageList1->Handle = ImageHandle;
    	ImageList1->ShareImages = true;
  	}

    Label1->Caption = DirectoryListBox1->Directory;
    Label2->Caption = DirectoryListBox2->Directory;

    StringGrid1->Cells[1][0] = "Имя";
    StringGrid2->Cells[1][0] = "Имя";
    StringGrid1->Cells[2][0] = "Тип";
    StringGrid2->Cells[2][0] = "Тип";
    StringGrid1->Cells[3][0] = "Размер";
    StringGrid2->Cells[3][0] = "Размер";
    StringGrid1->Cells[4][0] = "Дата";
    StringGrid2->Cells[4][0] = "Дата";
    StringGrid1->Cells[1][1] = "[..]";
    StringGrid2->Cells[1][1] = "[..]";

    StringGrid1->ColCount = 5;
    StringGrid2->ColCount = 5;
}

void __fastcall TForm2::UpdateComponents()
{
	FileListBox1->Update();
    FileListBox2->Update();
    DirectoryListBox1->Update();
    DirectoryListBox2->Update();
    StringGrid1->Repaint();
    StringGrid2->Repaint();	
}

void __fastcall TForm2::Delete(TDirectoryListBox *DirectoryListBoxFrom, TDirectoryListBox *DirectoryListBoxTo, TStringGrid *PanelFrom, TFileListBox *FileListBoxFrom)
{
    int topSelectedRow = max(PanelFrom->Selection.Top, 2);
    int bottomSelectedRow = PanelFrom->Selection.Bottom;
    bool updateFlag = false;
    String pathFrom, removedElements = "";

    for (int i = topSelectedRow; i <= bottomSelectedRow; ++i){
    	if (PanelFrom->Cells[3][i] != "<Папка>"){
        	int j = i - 1 - DirectoryListBoxFrom->Count + DirectoryListBoxFrom->ItemIndex;
        	if (DirectoryListBoxFrom->ItemIndex == 0)
        		pathFrom = DirectoryListBoxFrom->GetItemPath(DirectoryListBoxFrom->ItemIndex) + ExtractFileName(FileListBoxFrom->Items->Strings[j]);
            else pathFrom = DirectoryListBoxFrom->GetItemPath(DirectoryListBoxFrom->ItemIndex) + "\\" + ExtractFileName(FileListBoxFrom->Items->Strings[j]);
        }
        else if (PanelFrom->Cells[3][i] == "<Папка>"){
        	if (DirectoryListBoxFrom->ItemIndex == 0)
        		pathFrom = DirectoryListBoxFrom->Directory + PanelFrom->Cells[1][i];
    		else pathFrom = DirectoryListBoxFrom->Directory + "\\" + PanelFrom->Cells[1][i];

        	String pathTo = Label2->Caption;
            bool entryFlag = true;

        	if (pathFrom.Length() == pathTo.Length()) 
            {
            	for (int j = 1; j <= pathFrom.Length(); ++j)
            		if (pathFrom[j] != pathTo[j]) entryFlag = false;
        	}
            else if (pathFrom.Length() < pathTo.Length()) 
            {
            	pathFrom += '\\';
            	for (int j = 1; j <= pathFrom.Length(); ++j)
            		if (pathFrom[j] != pathTo[j]) entryFlag = false;
                pathFrom.Delete(pathFrom.Length(), 1);    
        	}
        	else entryFlag = false;

            if (entryFlag) updateFlag = true;  
    	}
        removedElements += pathFrom + '\0';
    }

    removedElements += '\0';
    
    SHFILEOPSTRUCT operation;
    ZeroMemory(&operation, sizeof(operation));
    operation.hwnd  = Form2->Handle;
    operation.wFunc = FO_DELETE;
    operation.pFrom = removedElements.c_str();
    operation.fFlags = FOF_ALLOWUNDO;
    SHFileOperation(&operation);

    if (updateFlag) DirectoryListBoxTo->Directory = DirectoryListBoxFrom->Directory;

    UpdateComponents();
}

void __fastcall TForm2::Button2Click(TObject *Sender)
{
    if (selectedPanel == 1) Delete(DirectoryListBox1, DirectoryListBox2, StringGrid1, FileListBox1);
    else Delete(DirectoryListBox2, DirectoryListBox1, StringGrid2, FileListBox2);
  /*  bool flag;
    String s;

    if (StringGrid1->Cells[3][B1] != "<Папка>"){
        int i = B1 - 1 - DirectoryListBox1->Count + DirectoryListBox1->ItemIndex;
        if (DirectoryListBox1->ItemIndex == 0)
        	s = DirectoryListBox1->GetItemPath(DirectoryListBox1->ItemIndex) + ExtractFileName(FileListBox1->Items->Strings[i]);
        else s = DirectoryListBox1->GetItemPath(DirectoryListBox1->ItemIndex) + "\\" + ExtractFileName(FileListBox1->Items->Strings[i]);
	}
	else if (StringGrid1->Cells[3][B1] == "<Папка>"){
        if (DirectoryListBox1->ItemIndex == 0)
        	s = DirectoryListBox1->Directory + StringGrid1->Cells[1][B1];
    	else s = DirectoryListBox1->Directory + "\\" + StringGrid1->Cells[1][B1];

        String s2 = Label2->Caption;
        int len = s.Length();

        flag = true;
        if (s.Length() <= s2.Length()) {
            for (int i = 1; i <= s.Length(); ++i)
            if (s[i] != s2[i]) flag = false;
        }
        else flag = false;
    }
    else flag = false;

    s += '\0';

    SHFILEOPSTRUCT op;
    ZeroMemory(&op, sizeof(op));
    op.hwnd  = Handle;
    op.wFunc = FO_DELETE;
    op.pFrom = s.c_str();
    op.fFlags = FOF_ALLOWUNDO;
    SHFileOperation(&op);

    if (flag) DirectoryListBox2->Directory = DirectoryListBox1->Directory;

    FileListBox1->Update();
    FileListBox2->Update();
    DirectoryListBox1->Update();
    DirectoryListBox2->Update();
    StringGrid1->Repaint();
    StringGrid2->Repaint();          */
}
//---------------------------------------------------------------------------
void __fastcall TForm2::Button3Click(TObject *Sender)
{
    String s, s1, s2, s3, s4, path;
    bool flag;
    int len;
    if (StringGrid1->Cells[3][B1] != "<Папка>")
	{
		int i = B1 - 1 - DirectoryListBox1->Count + DirectoryListBox1->ItemIndex;
        if (DirectoryListBox1->ItemIndex == 0)
        	s = DirectoryListBox1->GetItemPath(DirectoryListBox1->ItemIndex) + "\\" + ExtractFileName(FileListBox1->Items->Strings[i]);
        else s = DirectoryListBox1->GetItemPath(DirectoryListBox1->ItemIndex) + "\\" + ExtractFileName(FileListBox1->Items->Strings[i]);

		path = InputBox("Переименование файла", "Введите новое имя", "");

        if (DirectoryListBox1->ItemIndex == 0)
        	s1 = DirectoryListBox1->GetItemPath(DirectoryListBox1->ItemIndex) + "\\" + path + ExtractFileExt(FileListBox1->Items->Strings[i]);
        else s1 = DirectoryListBox1->GetItemPath(DirectoryListBox1->ItemIndex) + "\\" + path + ExtractFileExt(FileListBox1->Items->Strings[i]);

        s += '\0';
        s1 += '\0';
	}
	else if (StringGrid1->Cells[3][B1] == "<Папка>"){
    	s = DirectoryListBox1->GetItemPath(DirectoryListBox1->ItemIndex + B1 - 1);

    	path = InputBox("Переименование папки", "Введите новое имя", "");

    	if (DirectoryListBox1->ItemIndex == 0)
        	s1 = DirectoryListBox1->GetItemPath(DirectoryListBox1->ItemIndex) + path;
        else s1 = DirectoryListBox1->GetItemPath(DirectoryListBox1->ItemIndex) + "\\" + path;
    	s2 = Label2->Caption;
    	len = s.Length();

    	flag = true;
    	if (s.Length() <= s2.Length()) {
    		for (int i = 1; i <= s.Length(); ++i)
            	if (s[i] != s2[i]) flag = false;
    	}
    	else flag = false;

    	s += '\0';
    	s4 = s1;
    	s1 += '\0';
    }

    SHFILEOPSTRUCT op;
    ZeroMemory(&op, sizeof(op));
    op.hwnd  = Form2->Handle;
    op.wFunc = FO_RENAME;
    op.pFrom = s.c_str();
    op.pTo = s1.c_str();
    op.fFlags = 0;
    SHFileOperation(&op);
    if (StringGrid1->Cells[3][B1] == "<Папка>"){
        if (flag) {
        	s2.Delete(1, len);
        	s2 = s4 + "\\" + s2;
    	}
    	DirectoryListBox2->Directory = s2;
    }

    FileListBox1->Update();
    FileListBox2->Update();
    DirectoryListBox1->Update();
    DirectoryListBox2->Update();
    StringGrid1->Repaint();
    StringGrid2->Repaint();
}
//---------------------------------------------------------------------------
void __fastcall TForm2::DriveComboBox1Change(TObject *Sender)
{
    DirectoryListBox1->Drive = DriveComboBox1->Drive;
    DirectoryListBox1->Directory = DirectoryListBox1->GetItemPath(0);
    StringGrid1->Repaint();
}
//---------------------------------------------------------------------------
void __fastcall TForm2::DriveComboBox2Change(TObject *Sender)
{
    DirectoryListBox2->Drive = DriveComboBox2->Drive;
    DirectoryListBox2->Directory = DirectoryListBox2->GetItemPath(0);
    StringGrid2->Repaint();
}
//---------------------------------------------------------------------------
void __fastcall TForm2::DirectoryListBox2Change(TObject *Sender)
{
    Label2->Caption = DirectoryListBox2->Directory;

	FileListBox2->Directory = DirectoryListBox2->Directory;

    StringGrid2->RowCount = DirectoryListBox2->Count - DirectoryListBox2->ItemIndex + 1 + FileListBox2->Count;

    WIN32_FILE_ATTRIBUTE_DATA fad;

    int a = DirectoryListBox2->ItemIndex + 1;
    int b = DirectoryListBox2->Count - 1;
    String s;
    for (int i = a; i <= b; i++)
    {
        StringGrid2->Cells[1][i - a + 2] = DirectoryListBox2->Items->Strings[i];
        StringGrid2->Cells[2][i - a + 2] = "";
        StringGrid2->Cells[3][i - a + 2] = "<Папка>";
        s = DirectoryListBox2->GetItemPath(i);
        if(GetFileAttributesEx(s.c_str(), GetFileExInfoStandard, (LPVOID)&fad)) {
            SYSTEMTIME st;

            if(FileTimeToSystemTime(&fad.ftLastWriteTime, &st))
            {
                TDateTime dt = SystemTimeToDateTime(st);
                dt += 3.0 / 24;
                StringGrid2->Cells[4][i - a + 2] = dt.DateTimeString();
            }
        }
    }
    a = b - a + 3;
    b = FileListBox2->Count;
    int pos;
    for (int i = 0; i < b; i++)
    {
        s = ExtractFileName(FileListBox2->Items->Strings[i]);
        pos = LastDelimiter('.', s);
        s.Delete(pos, s.Length() - pos + 1);
        StringGrid2->Cells[1][i + a] = s;
        StringGrid2->Cells[2][i + a] = ExtractFileExt(FileListBox2->Items->Strings[i]);
        s = DirectoryListBox2->Directory + "\\" + FileListBox2->Items->Strings[i];
        if(GetFileAttributesEx(s.c_str(), GetFileExInfoStandard, (LPVOID)&fad)) {
            SYSTEMTIME st;

            if(FileTimeToSystemTime(&fad.ftLastWriteTime, &st))
            {
                TDateTime dt = SystemTimeToDateTime(st);
                dt += 3.0 / 24;
                StringGrid2->Cells[4][i + a] = dt.DateTimeString();
                StringGrid2->Cells[3][i + a] = fad.nFileSizeHigh * (MAXDWORD + 1) + fad.nFileSizeLow;
            }
        }
    }
}
//---------------------------------------------------------------------------
void __fastcall TForm2::FilterComboBox1Change(TObject *Sender)
{
    FileListBox1->Mask = FilterComboBox1->Mask;
    DirectoryListBox1Change(0);
}
//---------------------------------------------------------------------------

void __fastcall TForm2::FilterComboBox2Change(TObject *Sender)
{
    FileListBox2->Mask = FilterComboBox2->Mask;
    DirectoryListBox2Change(0);
}
//---------------------------------------------------------------------------
void __fastcall TForm2::StringGrid1SelectCell(TObject *Sender, int ACol, int ARow,
          bool &CanSelect)
{
    A1 = ACol;
    B1 = ARow;
}
//---------------------------------------------------------------------------
void __fastcall TForm2::StringGrid1DblClick(TObject *Sender)
{
    selectedPanel = 1;
    if (B1 > 0 && B1 < DirectoryListBox1->Count - DirectoryListBox1->ItemIndex + 1){
    	if (B1 == 1 && DirectoryListBox1->ItemIndex > 0)
        	DirectoryListBox1->Directory = DirectoryListBox1->GetItemPath(DirectoryListBox1->ItemIndex - 1);
    	else DirectoryListBox1->Directory = DirectoryListBox1->GetItemPath(DirectoryListBox1->ItemIndex + B1 - 1);
    }
    else if (B1 > 0){
        String str = FileListBox1->Directory + "\\" + FileListBox1->Items->Strings[B1 - (DirectoryListBox1->Count - DirectoryListBox1->ItemIndex + 1)];
    	ShellExecute(Form2->Handle, L"open", str.c_str(), NULL, NULL, SW_SHOWDEFAULT);
    }
    StringGrid1->Repaint();
}
//---------------------------------------------------------------------------
void __fastcall TForm2::StringGrid2SelectCell(TObject *Sender, int ACol, int ARow,
          bool &CanSelect)
{
    A2 = ACol;
    B2 = ARow;
}
//---------------------------------------------------------------------------
void __fastcall TForm2::StringGrid2DblClick(TObject *Sender)
{
    selectedPanel = 2;
    if (B2 > 0 && B2 < DirectoryListBox2->Count - DirectoryListBox2->ItemIndex + 1){
    	if (B2 == 1 && DirectoryListBox2->ItemIndex > 0)
        	DirectoryListBox2->Directory = DirectoryListBox2->GetItemPath(DirectoryListBox2->ItemIndex - 1);
    	else DirectoryListBox2->Directory = DirectoryListBox2->GetItemPath(DirectoryListBox2->ItemIndex + B2 - 1);
    }
    else if (B2 > 0){
        String str = FileListBox2->Directory + "\\" + FileListBox2->Items->Strings[B2 - (DirectoryListBox2->Count - DirectoryListBox2->ItemIndex + 1)];
    	ShellExecute(Form2->Handle, L"open", str.c_str(), NULL, NULL, SW_SHOWDEFAULT);
    }
    StringGrid2->Repaint();
}
//---------------------------------------------------------------------------
void __fastcall TForm2::FormKeyDown(TObject *Sender, WORD &Key, TShiftState Shift)

{
    if (Key == 116) Button3Click(0);
	if (Key == 117) Button1Click(0);
	if (Key == 118) Button2Click(0);
}
//---------------------------------------------------------------------------
void __fastcall TForm2::Button4Click(TObject *Sender)
{
    Form2->Close();
}
//---------------------------------------------------------------------------
void __fastcall TForm2::StringGrid1Click(TObject *Sender)
{
    selectedPanel = 1;
}
//---------------------------------------------------------------------------
void __fastcall TForm2::StringGrid2Click(TObject *Sender)
{
    selectedPanel = 2;
}
//---------------------------------------------------------------------------
void __fastcall TForm2::StringGrid1DrawCell(TObject *Sender, int ACol, int ARow, TRect &Rect,
          TGridDrawState State)
{
	Graphics::TBitmap * Bitmap = new Graphics::TBitmap;
    int a = DirectoryListBox1->ItemIndex;
    String s;
    SHFILEINFO info;
    DWORD result;
    if (ACol == 0 && ARow > 1)
    {
        if (ARow < DirectoryListBox1->Count - DirectoryListBox1->ItemIndex + 1)
            s = DirectoryListBox1->GetItemPath(a + ARow - 1);
        else {
            if (DirectoryListBox1->ItemIndex > 0)
                s = FileListBox1->Directory + "\\" + FileListBox1->Items->Strings[ARow - (DirectoryListBox1->Count - DirectoryListBox1->ItemIndex + 1)];
            else s = FileListBox1->Directory + FileListBox1->Items->Strings[ARow - (DirectoryListBox1->Count - DirectoryListBox1->ItemIndex + 1)];
        }

        SHGetFileInfo(s.c_str(), 0, &info, sizeof(info), SHGFI_ICON | SHGFI_SHELLICONSIZE | SHGFI_SYSICONINDEX);

        ImageList1->GetBitmap(info.iIcon, Bitmap);
        StringGrid1->Canvas->StretchDraw(Rect, Bitmap);
    }
}
//---------------------------------------------------------------------------
void __fastcall TForm2::StringGrid2DrawCell(TObject *Sender, int ACol, int ARow, TRect &Rect,
          TGridDrawState State)
{
    Graphics::TBitmap * Bitmap = new Graphics::TBitmap;
    int a = DirectoryListBox2->ItemIndex;
    String s;
    SHFILEINFO info;
    DWORD result;
    if (ACol == 0 && ARow > 1)
    {
        if (ARow < DirectoryListBox2->Count - DirectoryListBox2->ItemIndex + 1)
            s = DirectoryListBox2->GetItemPath(a + ARow - 1);
        else {
            if (DirectoryListBox2->ItemIndex > 0)
                s = FileListBox2->Directory + "\\" + FileListBox2->Items->Strings[ARow - (DirectoryListBox2->Count - DirectoryListBox2->ItemIndex + 1)];
            else s = FileListBox2->Directory + FileListBox2->Items->Strings[ARow - (DirectoryListBox2->Count - DirectoryListBox2->ItemIndex + 1)];
        }

        SHGetFileInfo(s.c_str(), 0, &info, sizeof(info), SHGFI_ICON | SHGFI_SHELLICONSIZE | SHGFI_SYSICONINDEX);

        ImageList1->GetBitmap(info.iIcon, Bitmap);
        StringGrid2->Canvas->StretchDraw(Rect, Bitmap);
    }
}
//---------------------------------------------------------------------------
void __fastcall TForm2::StringGrid1KeyDown(TObject *Sender, WORD &Key, TShiftState Shift)

{
    if (Key == 13) StringGrid1DblClick(0);
    if (Key == 27 || Key == 8) {
        A1 = 1;
        B1 = 1;
        StringGrid1DblClick(0);
    }
}
//---------------------------------------------------------------------------
void __fastcall TForm2::StringGrid2KeyDown(TObject *Sender, WORD &Key, TShiftState Shift)

{
    if (Key == 13) StringGrid2DblClick(0);
    if (Key == 27 || Key == 8) {
        A2 = 1;
        B2 = 1;
        StringGrid2DblClick(0);
    }
}
//---------------------------------------------------------------------------
void __fastcall TForm2::Move(TDirectoryListBox *DirectoryListBoxFrom, TStringGrid *PanelFrom, TFileListBox *FileListBoxFrom, TLabel *LabelTo)
{
    int topSelectedRow = max(PanelFrom->Selection.Top, 2);
    int bottomSelectedRow = PanelFrom->Selection.Bottom;
    String movedFrom = "";

    for (int i = topSelectedRow; i <= bottomSelectedRow; ++i){
    	if (PanelFrom->Cells[3][i] != "<Папка>"){
        	int j = i - 1 - DirectoryListBoxFrom->Count + DirectoryListBoxFrom->ItemIndex;
        	if (DirectoryListBoxFrom->ItemIndex == 0)
        		movedFrom += DirectoryListBoxFrom->GetItemPath(DirectoryListBoxFrom->ItemIndex) + ExtractFileName(FileListBoxFrom->Items->Strings[j]);
            else movedFrom += DirectoryListBoxFrom->GetItemPath(DirectoryListBoxFrom->ItemIndex) + "\\" + ExtractFileName(FileListBoxFrom->Items->Strings[j]);
        }
        else if (PanelFrom->Cells[3][i] == "<Папка>"){
        	if (DirectoryListBoxFrom->ItemIndex == 0)
        		movedFrom += DirectoryListBoxFrom->Directory + PanelFrom->Cells[1][i];
    		else movedFrom += DirectoryListBoxFrom->Directory + "\\" + PanelFrom->Cells[1][i];
    	}
        movedFrom += '\0';
    }

    movedFrom += '\0';
    String movedTo = LabelTo->Caption + "\0\0";
    
    SHFILEOPSTRUCT operation;
    ZeroMemory(&operation, sizeof(operation));
    operation.hwnd  = Form2->Handle;
    operation.wFunc = FO_MOVE;
    operation.pFrom = movedFrom.c_str();
    operation.pTo = movedTo.c_str();
    operation.fFlags = 0;
    SHFileOperation(&operation);

    UpdateComponents();
}

void __fastcall TForm2::Button5Click(TObject *Sender)
{
	if (selectedPanel == 1) Move(DirectoryListBox1, StringGrid1, FileListBox1, Label2);
    else Move(DirectoryListBox2, StringGrid2, FileListBox2, Label1);
}
//---------------------------------------------------------------------------
void __fastcall TForm2::Rename(TDirectoryListBox *DirectoryListBoxFrom, TStringGrid *PanelFrom, TFileListBox *FileListBoxFrom, TLabel *LabelTo)
{
    int topSelectedRow = max(PanelFrom->Selection.Top, 2);
    int bottomSelectedRow = PanelFrom->Selection.Bottom;
    String renamedFrom = "";

    for (int i = topSelectedRow; i <= bottomSelectedRow; ++i){
    	if (PanelFrom->Cells[3][i] != "<Папка>"){
        	int j = i - 1 - DirectoryListBoxFrom->Count + DirectoryListBoxFrom->ItemIndex;
        	if (DirectoryListBoxFrom->ItemIndex == 0)
        		renamedFrom += DirectoryListBoxFrom->GetItemPath(DirectoryListBoxFrom->ItemIndex) + ExtractFileName(FileListBoxFrom->Items->Strings[j]);
            else renamedFrom += DirectoryListBoxFrom->GetItemPath(DirectoryListBoxFrom->ItemIndex) + "\\" + ExtractFileName(FileListBoxFrom->Items->Strings[j]);
        }
        else if (PanelFrom->Cells[3][i] == "<Папка>"){
        	if (DirectoryListBoxFrom->ItemIndex == 0)
        		renamedFrom += DirectoryListBoxFrom->Directory + PanelFrom->Cells[1][i];
    		else renamedFrom += DirectoryListBoxFrom->Directory + "\\" + PanelFrom->Cells[1][i];
    	}
        renamedFrom += '\0';
    }

    renamedFrom += '\0';
    String renamedTo = LabelTo->Caption + "\0\0";
    
    SHFILEOPSTRUCT operation;
    ZeroMemory(&operation, sizeof(operation));
    operation.hwnd  = Form2->Handle;
    operation.wFunc = FO_RENAME;
    operation.pFrom = renamedFrom.c_str();
    operation.pTo = renamedTo.c_str();
    operation.fFlags = 0;
    SHFileOperation(&operation);

    UpdateComponents();
}

void __fastcall TForm2::Button6Click(TObject *Sender)
{
	if (selectedPanel == 1) Rename(DirectoryListBox1, StringGrid1, FileListBox1, Label2);
    else Rename(DirectoryListBox2, StringGrid2, FileListBox2, Label1);		
}
//---------------------------------------------------------------------------

